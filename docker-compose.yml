version: '3.8'

x-common-env: &common-env
  KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
  KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT'
  KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
  KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker1:29093,2@broker2:29093'
  KAFKA_PROCESS_ROLES: 'broker,controller'
  KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
  KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 2
  CLUSTER_ID: 'BFBNQ7K1QESxdcylCZIfFg'
  KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
  CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
  CONFLUENT_METRICS_ENABLE: 'true'
  CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous

x-common-healthcheck: &common-healthcheck
  interval: 10s
  timeout: 5s
  retries: 5

services:
  broker1:
    image: confluentinc/cp-server
    container_name: broker1
    hostname: broker1
    ports:
      - "9092:9092"
    environment:
      <<: *common-env
      KAFKA_NODE_ID: 1
      KAFKA_LISTENERS: 'INTERNAL://broker1:29092,CONTROLLER://broker1:29093,EXTERNAL://0.0.0.0:9092'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker1:29092,EXTERNAL://localhost:9092'
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:29092
    healthcheck:
      <<: *common-healthcheck
      test: [ "CMD", "bash", "-c", "echo 'Hello Ridwan' | nc localhost 9092"]
    networks:
      - ridwanclouds
    volumes:
      - kafka-data:/tmp/kraft-combined-logs

  broker2:
    image: confluentinc/cp-server
    container_name: broker2
    hostname: broker2
    ports:
      - "9093:9093"
    environment:
      <<: *common-env
      KAFKA_NODE_ID: 2
      KAFKA_LISTENERS: 'INTERNAL://broker2:29092,CONTROLLER://broker2:29093,EXTERNAL://0.0.0.0:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://broker2:29092,EXTERNAL://localhost:9093'
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker2:29092
    healthcheck:
      <<: *common-healthcheck
      test: [ "CMD", "bash", "-c", "echo 'Hello Ridwan' | nc localhost 9093"]
    networks:
      - ridwanclouds
    volumes:
      - kafka-data:/tmp/kraft-combined-logs

  control-center:
    image: confluentinc/cp-enterprise-control-center
    container_name: control-center
    hostname: control-center
    ports:
      - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29092'
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      CONFLUENT_METRICS_ENABLE: 'false'
      PORT: 9021
    networks:
      - ridwanclouds
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9021/health" ]
      interval: 30s
      timeout: 10s
      retries: 5

  minio:
    image: minio/minio
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9001"
    networks:
      - ridwanclouds

  mc-init:
    image: 'minio/mc'
    container_name: mc-init
    entrypoint: |
      /bin/bash -c "
      sleep 5;
      /usr/bin/mc config --quiet host add dmlminio http://minio:9000 minioadmin minioadmin
      /usr/bin/mc mb --quiet dmlminio/bronze;
      /usr/bin/mc admin service restart dmlminio;
      "
    depends_on:
      - minio
    networks:
      - ridwanclouds


  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    hostname: schema-registry
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry  # Added required environment variable
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'broker1:29092,broker2:29092'
      SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8081'
      SCHEMA_REGISTRY_CONFLUENT_SUPPORT_CUSTOMER_ID: anonymous
    networks:
      - ridwanclouds
    healthcheck:
      <<: *common-healthcheck
      test: [ "CMD", "curl", "-f", "http://localhost:8081/subjects" ]


networks:
  ridwanclouds:

volumes:
  kafka-data:
